# https://github.com/eduardolat/pgbackweb
version: "3.7"
# definição dos serviços do stack
services:
  # definição do serviço do pgbackupweb
  pgbackupweb:
    # define a imagem do pgbackupweb
    image: eduardolat/pgbackweb:latest
    # configur aa rede do serviço
    networks:
      - network_swarm_public
    # volumes do pgbackupweb
    volumes:
      - pgbackupweb_data:/backups
    # define as variáveis de ambiente
    environment:
      # Adiciona uma encription key para salvar os dados
      - PBW_ENCRYPTION_KEY=O438KhcaLhIXj00SPGh0
      # Configura a conexão com o banco de dados
      - PBW_POSTGRES_CONN_STRING=postgresql://postgres:SENHA@postgres:5432/pgbackweb?sslmode=disable
      # Configura o timezone
      - TZ=Almerica/Sao_Paulo
    deploy:
      # configura o modo de deploy do pgbackupweb
      mode: replicated
      # configura o numero de replicas do serviço do postgres (1 é o padrão)
      replicas: 1
      placement:
        constraints:
          #- node.role == manager
          - node.hostname == flow01
      labels:
        - traefik.enable=true
        - traefik.http.routers.pgbackupweb.rule=Host(`pgbkp.expertlabs.com.br`)
        - traefik.http.routers.pgbackupweb.entrypoints=websecure
        - traefik.http.routers.pgbackupweb.priority=1
        - traefik.http.routers.pgbackupweb.tls.certresolver=letsencryptresolver
        - traefik.http.services.pgbackupweb.loadbalancer.server.port=8085
        - traefik.http.routers.pgbackupweb.service=pgbackupweb
      resources:
        # configura os limites de recursos do serviço do backup
        limits:
          # configura o limite de CPU do serviço do backup
          cpus: "1"
          # configura o limite de memória do serviço do backup
          memory: 2048M

volumes:
  pgbackupweb_data:
    external: true
    name: pgbackupweb

networks:
  network_swarm_public:
    external: true
    name: network_swarm_public
